{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","views/index.ts","/Users/davidcrossman/dev/booklog.dashboard/src/app.html","/Users/davidcrossman/dev/booklog.dashboard/src/views/index.html"],"names":[],"mappings":";;;IAEA;QAAA;QAWA,CAAC;QARC,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACzD,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,EAAE,EAAG,QAAQ,EAAE,aAAa,EAAK,KAAK,EAAE,WAAW,EAAC;aAC9D,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QACH,UAAC;IAAD,CAXA,AAWC,IAAA;IAXY,kBAAG;;;;;;ICFhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;ICEI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC;;;;;;ICJD;QAAA;YACI,SAAI,GAAG,uBAAuB,CAAA;QAClC,CAAC;QAAD,WAAC;IAAD,CAFA,AAEC,IAAA;IAFY,oBAAI;;;ACAjB;ACAA","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n  router: Router;\n\n  configureRouter(config: RouterConfiguration, router: Router){\n    config.title = 'Booklog';\n    config.map([\n      { route: '',  moduleId: 'views/index',    title: 'Dashboard'}\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export class Home {\n    name = 'Regina Public Library'\n}\n",null,null],"sourceRoot":"../src"}